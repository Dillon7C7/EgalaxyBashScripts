#!/bin/bash

usage="Usage: $0 Source_Folder/File_Name"

# must be in the working directory
if [ "$(pwd)" != "/home/encoder/w" ]; then
	echo "ERROR! MUST BE IN DIRECTORY: /home/encoder/w" >&2
	exit 1
fi

if [ "$#" -ne 1 ]; then
	echo "$usage" >&2
	echo "Ex: $0 today/DP_Feb09.mov" >&2
	echo "Ex: $0 weekend/DP_Mar12.mov" >&2
	echo "Ex: $0 holiday/DP_Dec24.mov" >&2
	exit 1
fi

full_date="$(date +%Y-%m-%d)"
month_num="$(date +%m)"
month_str="$(date +%b)"

#month_num="$(echo $full_date | cut -d- -f 2)"
#month_str="$(echo $full_date | cut -d' ' -f 1)"

regex="(today|friday|weekend|holiday)/(DP_[[:alpha:]]{3}[[:digit:]]{2})\.mov"

echo "but first $full_date"
echo "$month_num and $month_str"

if [[ "$1" =~ $regex ]]; then
	echo "success: ${BASH_REMATCH[1]}"
	echo "success: ${BASH_REMATCH[2]}"
else
	echo "fuuuu"
fi
#program_promo_hd_welcome_Dec24.mov 

#month="${BASH_REMATCH[2]}"
source_dir=$1
#old_name=$2
#new_name=$3

#cp ${source_dir}/${old_name} ${new_name}
#./sk_encode.sh ${new_name}
#!/bin/bash

#usage="Usage: $0 YYYY-MM-DD Source_Folder segment_number(s)"
#
#print_usage()
#{
#	echo "$usage" >&2
#	echo "Ex: $0 2014-03-09 today 4 2" >&2
#	echo "Ex: $0 2014-11-28 weekend 1 2 3" >&2
#	echo "Ex: $0 2014-12-24 holiday 3 4 5 6 7" >&2
#}
#
#if [ "$#" -lt "3" ]; then
#	print_usage
#	exit 1
#fi 
#
#name_date=$1
#source_dir=$2
#
## YYYY-MM-DD
#date_regex="^([0-9]{4})-([0-9]{2})-([0-9]{2})$"
#
#if [[ ! "$1" =~ $date_regex ]]; then
#	echo "$0 ERROR: date must be in the format YYYY-MM-DD" >&2
#	echo "---------------------------------------"
#	print_usage
#	exit 1
#fi
#
#month="${BASH_REMATCH[2]}"
#
## check month, must be <= 12
#if [ "$month" -gt "12" ]; then
#	echo "$0 ERROR: month must be 12 or less" >&2
#	echo "---------------------------------------"
#	print_usage
#	exit 1
#fi
#
#day="${BASH_REMATCH[3]}"
#
## check day, must be <= 31
#if [ "$day" -gt "31" ]; then
#	echo "$0 ERROR: day must be 31 or less" >&2
#	echo "---------------------------------------"
#	print_usage
#	exit 1
#fi
#
## the initial regex ensures that these values are non-negative
#
## check source directory
## must be one of today, friday, weekend, holiday
#if [[ ! "$source_dir" =~ ^(today|friday|weekend|holiday)$ ]]; then
#	echo -e "$0 ERROR: source directory must be one of:\n\
#today\nfriday\nweekend\nholiday" >&2
#	echo "---------------------------------------"
#	print_usage
#	exit 1
#fi
#
#######################################################################
#
## remove $1 and $2 from list of arguments
#shift 2
#
#segment_regex="^[1-7]+$"
#segment_array=()
#success_array=()
#failure_array=()
#
#while (( "$#" )); do # loop through segment numbers
#
#	echo "---------------------------------------"
#
#	if [[ ! "$1" =~ $segment_regex ]]; then
#		echo "$0 ERROR: $1 must be a number! (between 1-7 inclusive)" >&2
#		echo "Skipping $1..."
#		sleep 1.5s
#		#shift
#		#continue
#	else
#		segment_array+=("$1")
#
#		./ENC $name_date $source_dir $1	
#		enc_status="$?"
#	
#		# if ./ENC exited successfully...
#		if [ "$enc_status" -eq "0" ]; then
#			echo "Segment $1 complete !!!!!!"
#			success_array+=("$1")
#		else
#			echo "$0 ERROR: something bad happened; segment $1 failed!!" >&2
#			failure_array+=("$1")
#		fi
#	
#		#shift
#	fi
#	
#	shift
#done
#
#echo "---------------------------------------"
#echo "These (valid) segments were given: ${segment_array[@]}"
#
#if [ -n "$success_array" ]; then
#	echo "These segments were processed: ${success_array[@]}"
#	echo "DONE !!!!!! without failures"
#fi
#
#if [ -n "$failure_array" ]; then
#	echo "These segments failed: ${failure_array[@]}" >&2
#	echo "DONE !!!!!! with failures"
#fi
#!/bin/sh

#WORK_DIR="/home/encoder/w"
#
## make sure we are in the working directory
#if [ "$(pwd)" != "$WORK_DIR" ]; then
#  echo "ERROR! MUST BE IN DIRECTORY: /home/encoder/w" >&2
#  exit 1
#fi
#
#echo "Running Cleanup !!!!!!"
#
#mv ${WORK_DIR}/done_archive/sk/out/*.mp4 ${WORK_DIR}/done_archive/sk/old/
#
#rm -f ${WORK_DIR}/*.mp4
#rm -f ${WORK_DIR}/*.mp3
#rm -f ${WORK_DIR}/*.mov
#rm -f ${WORK_DIR}/ffmpeg2pass*
#ssh nnencoder@beer.nakednews.com 'cd /usr/www/signups/cgi-bin/signups/external/public/sk-encoder/;./.cleanup'
